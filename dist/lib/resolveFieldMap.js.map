{"version":3,"sources":["../../lib/resolveFieldMap.ts"],"sourcesContent":["function getFieldMap(tableName: string): { [key: string]: string } {\n  switch (tableName) {\n    case \"Contacts\":\n      return {\n        Name: \"name\",\n        Role: \"role\",\n        Organisation: \"organisation\",\n        Email: \"email\",\n        Tags: \"tags\",\n        Notes: \"notes\",\n      };\n    case \"Log Entries\":\n      return {\n        Date: \"date\",\n        Summary: \"summary\",\n        Content: \"content\",\n        Tags: \"tags\",\n        \"Log Type\": \"logType\",\n        Contacts: \"contacts\",\n      };\n    case \"Snapshots\":\n      return {\n        Title: \"title\",\n        Date: \"date\",\n        Content: \"content\",\n        \"Key Updates\": \"keyUpdates\",\n        \"Phase ID\": \"phaseId\",\n      };\n    case \"Threads\":\n      return {\n        Title: \"title\",\n        Summary: \"summary\",\n        Content: \"content\",\n        Tags: \"tags\",\n        Date: \"date\",\n        Contacts: \"contacts\",\n        Experiments: \"experiments\",\n        Outputs: \"outputs\",\n      };\n    default:\n      return {};\n  }\n}\n\nfunction filterMappedFields(fields: Record<string, any>, tableName: string): Record<string, any> {\n  const fieldMap = getFieldMap(tableName);\n  const mapped: Record<string, any> = {};\n  for (const key in fields) {\n    if (fieldMap[key]) {\n      mapped[fieldMap[key]] = fields[key];\n    }\n  }\n  return mapped;\n}\n\nmodule.exports = {\n  getFieldMap,\n  filterMappedFields\n};\n\n"],"mappings":";;;AAAA,SAAS,YAAY,WAA8C;AACjE,UAAQ,WAAW;AAAA,IACjB,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,QACN,cAAc;AAAA,QACd,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,SAAS;AAAA,QACT,MAAM;AAAA,QACN,YAAY;AAAA,QACZ,UAAU;AAAA,MACZ;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,OAAO;AAAA,QACP,MAAM;AAAA,QACN,SAAS;AAAA,QACT,eAAe;AAAA,QACf,YAAY;AAAA,MACd;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,OAAO;AAAA,QACP,SAAS;AAAA,QACT,SAAS;AAAA,QACT,MAAM;AAAA,QACN,MAAM;AAAA,QACN,UAAU;AAAA,QACV,aAAa;AAAA,QACb,SAAS;AAAA,MACX;AAAA,IACF;AACE,aAAO,CAAC;AAAA,EACZ;AACF;AAEA,SAAS,mBAAmB,QAA6B,WAAwC;AAC/F,QAAM,WAAW,YAAY,SAAS;AACtC,QAAM,SAA8B,CAAC;AACrC,aAAW,OAAO,QAAQ;AACxB,QAAI,SAAS,GAAG,GAAG;AACjB,aAAO,SAAS,GAAG,CAAC,IAAI,OAAO,GAAG;AAAA,IACpC;AAAA,EACF;AACA,SAAO;AACT;AAEA,OAAO,UAAU;AAAA,EACf;AAAA,EACA;AACF;","names":[]}