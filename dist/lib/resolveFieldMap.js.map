{"version":3,"sources":["../../lib/resolveFieldMap.ts"],"sourcesContent":["function getFieldMap(tableName: string): { [key: string]: string } {\n  switch (tableName) {\n    case \"Contacts\":\n      return {\n        name: \"Name\",\n        role: \"Role\",\n        organisation: \"Organisation\",\n        email: \"Email\",\n        tags: \"Tags\",\n        notes: \"Notes\"\n      };\n    case \"Logs\":\n      return {\n        date: \"Date\",\n        summary: \"Summary\",\n        content: \"Content\",\n        tags: \"Tags\",\n        logType: \"Log Type\",\n        contacts: \"Contacts (Linked)\",\n        threadId: \"Thread ID\"\n      };\n    case \"Snapshots\":\n      return {\n        date: \"Date\",\n        content: \"Snapshot Markdown\",\n        keyUpdates: \"Key Updates\",\n        phaseId: \"Phase ID\"\n      };\n    case \"Threads\":\n      return {\n        title: \"Title\",\n        summary: \"Summary\",\n        content: \"Content\",\n        tags: \"Tags\",\n        date: \"Date\",\n        contacts: \"Contacts\",\n        experiments: \"Experiments\",\n        outputs: \"Outputs\"\n      };\n    default:\n      return {};\n  }\n}\n\nfunction filterMappedFields(fields: Record<string, any>, tableName: string): Record<string, any> {\n  const fieldMap = getFieldMap(tableName);\n  const mapped: Record<string, any> = {};\n  for (const internalKey in fieldMap) {\n    const airtableField = fieldMap[internalKey];\n    if (fields[airtableField] !== undefined) {\n      mapped[internalKey] = fields[airtableField];\n    }\n  }\n  return mapped;\n}\n\nmodule.exports = {\n  getFieldMap,\n  filterMappedFields\n};\n"],"mappings":";;;AAAA,SAAS,YAAY,WAA8C;AACjE,UAAQ,WAAW;AAAA,IACjB,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,QACN,cAAc;AAAA,QACd,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,SAAS;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA,QACV,UAAU;AAAA,MACZ;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,SAAS;AAAA,MACX;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,OAAO;AAAA,QACP,SAAS;AAAA,QACT,SAAS;AAAA,QACT,MAAM;AAAA,QACN,MAAM;AAAA,QACN,UAAU;AAAA,QACV,aAAa;AAAA,QACb,SAAS;AAAA,MACX;AAAA,IACF;AACE,aAAO,CAAC;AAAA,EACZ;AACF;AAEA,SAAS,mBAAmB,QAA6B,WAAwC;AAC/F,QAAM,WAAW,YAAY,SAAS;AACtC,QAAM,SAA8B,CAAC;AACrC,aAAW,eAAe,UAAU;AAClC,UAAM,gBAAgB,SAAS,WAAW;AAC1C,QAAI,OAAO,aAAa,MAAM,QAAW;AACvC,aAAO,WAAW,IAAI,OAAO,aAAa;AAAA,IAC5C;AAAA,EACF;AACA,SAAO;AACT;AAEA,OAAO,UAAU;AAAA,EACf;AAAA,EACA;AACF;","names":[]}