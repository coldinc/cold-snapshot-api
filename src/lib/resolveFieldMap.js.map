{"version":3,"sources":["resolveFieldMap.ts"],"sourcesContent":["// AUTO-GENERATED FILE - DO NOT EDIT DIRECTLY\n// Generated by scripts/generateFieldMap.ts\n\nfunction getFieldMap(tableName: string): { [key: string]: string } {\n  switch (tableName) {\n    case \"Cold Snapshots\":\n      return {\n        date: \"Date\",\n        phaseId: \"Phase ID\",\n        snapshotMarkdown: \"Snapshot Markdown\",\n        keyUpdates: \"Key Updates\",\n        id: \"ID\",\n        created: \"Created\",\n      };\n    case \"Contacts\":\n      return {\n        name: \"Name\",\n        role: \"Role\",\n        company: \"Company\",\n        website: \"Website\",\n        linkedin: \"LinkedIn\",\n        overview: \"Overview\",\n        email: \"Email\",\n        source: \"Source\",\n        relationshipType: \"Relationship Type\",\n        relationshipStrength: \"Relationship Strength\",\n        status: \"Status\",\n        patternMatchCollaboration: \"Pattern Match: Collaboration\",\n        patternMatchArchetype: \"Pattern Match: Archetype\",\n        importedTable: \"Imported table\",\n        followupNeeded: \"Followup Needed\",\n        nextFollowupDate: \"Next Followup Date\",\n        followupSummary: \"Followup Summary\",\n        latestRelatedLog: \"Latest Related Log\",\n        id: \"ID\",\n        lastModified: \"Last Modified\",\n        logs: \"Logs\",\n        threads: \"Threads\",\n        created: \"Created\",\n      };\n    case \"Logs\":\n      return {\n        summary: \"Summary\",\n        contactsLinked: \"Contacts (Linked)\",\n        linkedContactId: \"Linked Contact ID\",\n        logType: \"Log Type\",\n        date: \"Date\",\n        content: \"Content\",\n        followupNeeded: \"Followup Needed\",\n        followupNotes: \"Followup Notes\",\n        tags: \"Tags\",\n        relatedOutput: \"Related Output\",\n        logId: \"Log ID\",\n        author: \"Author\",\n        createdAt: \"Created At\",\n        lastModified: \"Last Modified\",\n        contacts: \"Contacts\",\n        threadLinked: \"Thread (Linked)\",\n        threadId: \"Thread ID\",\n      };\n    case \"Threads\":\n      return {\n        name: \"Name\",\n        type: \"Type\",\n        status: \"Status\",\n        description: \"Description\",\n        associatedContacts: \"Associated Contacts\",\n        contactId: \"Contact ID\",\n        associatedLogs: \"Associated Logs\",\n        logId: \"Log ID\",\n        linkToOutputs: \"Link to Outputs\",\n        createdDate: \"Created Date\",\n        lastModified: \"Last Modified\",\n        threadId: \"Thread ID\",\n      };\n    default:\n      return {};\n  }\n}\n\nfunction filterMappedFields(data: Record<string, any>, fieldMap: Record<string, string>): Record<string, any> {\n  const src = (data as any).fields || data;\n  const result: Record<string, any> = {};\n  for (const [internal, airtable] of Object.entries(fieldMap)) {\n    if (src[internal] !== undefined) {\n      result[airtable] = src[internal];\n    } else if (src[airtable] !== undefined) {\n      result[airtable] = src[airtable];\n    }\n  }\n  return result;\n}\n\nexport { getFieldMap, filterMappedFields };\n"],"mappings":";AAGA,SAAS,YAAY,WAA8C;AACjE,UAAQ,WAAW;AAAA,IACjB,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,kBAAkB;AAAA,QAClB,YAAY;AAAA,QACZ,IAAI;AAAA,QACJ,SAAS;AAAA,MACX;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,SAAS;AAAA,QACT,UAAU;AAAA,QACV,UAAU;AAAA,QACV,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,kBAAkB;AAAA,QAClB,sBAAsB;AAAA,QACtB,QAAQ;AAAA,QACR,2BAA2B;AAAA,QAC3B,uBAAuB;AAAA,QACvB,eAAe;AAAA,QACf,gBAAgB;AAAA,QAChB,kBAAkB;AAAA,QAClB,iBAAiB;AAAA,QACjB,kBAAkB;AAAA,QAClB,IAAI;AAAA,QACJ,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,QACT,SAAS;AAAA,MACX;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,iBAAiB;AAAA,QACjB,SAAS;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,QACf,MAAM;AAAA,QACN,eAAe;AAAA,QACf,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,cAAc;AAAA,QACd,UAAU;AAAA,QACV,cAAc;AAAA,QACd,UAAU;AAAA,MACZ;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,oBAAoB;AAAA,QACpB,WAAW;AAAA,QACX,gBAAgB;AAAA,QAChB,OAAO;AAAA,QACP,eAAe;AAAA,QACf,aAAa;AAAA,QACb,cAAc;AAAA,QACd,UAAU;AAAA,MACZ;AAAA,IACF;AACE,aAAO,CAAC;AAAA,EACZ;AACF;AAEA,SAAS,mBAAmB,MAA2B,UAAuD;AAC5G,QAAM,MAAO,KAAa,UAAU;AACpC,QAAM,SAA8B,CAAC;AACrC,aAAW,CAAC,UAAU,QAAQ,KAAK,OAAO,QAAQ,QAAQ,GAAG;AAC3D,QAAI,IAAI,QAAQ,MAAM,QAAW;AAC/B,aAAO,QAAQ,IAAI,IAAI,QAAQ;AAAA,IACjC,WAAW,IAAI,QAAQ,MAAM,QAAW;AACtC,aAAO,QAAQ,IAAI,IAAI,QAAQ;AAAA,IACjC;AAAA,EACF;AACA,SAAO;AACT;","names":[]}