{
  "$schema": "https://raw.githubusercontent.com/openai/openai-openapi/master/openapi.json",
  "openapi": "3.1.0",
  "info": {
    "title": "Cold Snapshot API",
    "version": "2.0.0",
    "description": "Endpoints for managing snapshots, partner contacts, and log entries within Cold OS."
  },
  "servers": [
    {
      "url": "https://cold-snapshot-api.vercel.app"
    }
  ],
  "paths": {
    "/api/snapshots-latest": {
      "post": {
        "operationId": "createSnapshot",
        "summary": "Save latest snapshot",
        "description": "Overwrite the single \"latest snapshot\" entry. Use this when you want to update the current snapshot in place rather than create a historical record. IMPORTANT: Do not include read-only fields such as 'created' in the request payload.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Cold Snapshots",
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "phaseId": {
                    "type": "string"
                  },
                  "snapshotMarkdown": {
                    "type": "string"
                  },
                  "keyUpdates": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Snapshot saved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateSnapshot",
        "summary": "Update an existing snapshot",
        "description": "Update an existing snapshot. Do not include read-only fields.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "phaseId": {
                    "type": "string"
                  },
                  "snapshotMarkdown": {
                    "type": "string"
                  },
                  "keyUpdates": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated snapshot"
          }
        }
      }
    },
    "/api/snapshots-index": {
      "get": {
        "operationId": "getAllSnapshots",
        "summary": "List snapshots",
        "description": "Fetch all snapshot records.",
        "responses": {
          "200": {
            "description": "A list of snapshots"
          }
        }
      },
      "post": {
        "operationId": "createSnapshotRecord",
        "summary": "Create historical snapshot",
        "description": "Add a new record to the snapshot history. Use this endpoint when you want to preserve a snapshot for future reference. Do not include read-only fields such as 'id' or 'created'.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Cold Snapshots",
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "phaseId": {
                    "type": "string"
                  },
                  "snapshotMarkdown": {
                    "type": "string"
                  },
                  "keyUpdates": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created snapshot"
          }
        }
      }
    },
    "/api/snapshots-id": {
      "get": {
        "operationId": "getSnapshotById",
        "summary": "Get snapshot by ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The snapshot record"
          }
        }
      },
      "patch": {
        "operationId": "updateSnapshotRecord",
        "summary": "Update an existing historical snapshot",
        "description": "Update an existing historical snapshot. Do not include read-only fields.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "phaseId": {
                    "type": "string"
                  },
                  "snapshotMarkdown": {
                    "type": "string"
                  },
                  "keyUpdates": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated historical snapshot"
          }
        }
      }
    },
    "/api/snapshots-search": {
      "get": {
        "operationId": "searchSnapshots",
        "summary": "Search snapshots",
        "description": "Fuzzy search snapshots using the `q` parameter. Optional filters like `limit`, `sortBy`, `updatedAfter`, and `recent` are also supported.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results"
          }
        }
      }
    },
    "/api/contacts-index": {
      "get": {
        "operationId": "getAllContacts",
        "summary": "List all contacts",
        "description": "Fetch all partner contacts from Airtable.",
        "responses": {
          "200": {
            "description": "A list of contacts"
          }
        }
      },
      "post": {
        "operationId": "createContact",
        "summary": "Create a contact",
        "description": "Create a new partner contact in Airtable. Do not include any fields marked as read-only (such as 'id', 'lastModified' or 'created') in the request payload, they are computed automatically. Linked log or thread names may be supplied instead of record IDs and will be resolved automatically.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Contacts",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "linkedin": {
                    "type": "string"
                  },
                  "overview": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string",
                    "enum": [
                      "Referral",
                      "Outreach",
                      "Event",
                      "Colleague",
                      "Inbound",
                      "Lunchclub"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Evemt\""
                  },
                  "relationshipType": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Partner",
                        "Customer",
                        "Mentee",
                        "Subscriber",
                        "Lead",
                        "Network",
                        "Frenemy"
                      ]
                    }
                  },
                  "relationshipStrength": {
                    "type": "string",
                    "enum": [
                      "Cold",
                      "Weak",
                      "Warm",
                      "Strong"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Cold\""
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "Maintenance",
                      "Active Conversation",
                      "Needs Follow Up",
                      "No Response",
                      "No Fit",
                      "Dormant"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Dormant\""
                  },
                  "patternMatchCollaboration": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Collaborated – Referrer",
                        "Potential – Referrer",
                        "Potential – Client",
                        "Collaborated – Client",
                        "Potential – Sponsor",
                        "Collaborated – Sponsor",
                        "Potential – Drop Partner",
                        "Collaborated – Drop Partner",
                        "Potential – Event Partner",
                        "Collaborated – Event Partner",
                        "Potential – Content Partner",
                        "Collaborated – Content Partner",
                        "Potential – Podcast Guest",
                        "Collaborated – Podcast Guest",
                        "Collaborated – Mentoring",
                        "Potential – Mentoring",
                        "Potential – Co-Founder"
                      ]
                    }
                  },
                  "patternMatchArchetype": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Solo",
                        "Builder",
                        "Artist",
                        "Driver",
                        "Connector",
                        "Influencer",
                        "Agency",
                        "Educator",
                        "Investor"
                      ]
                    }
                  },
                  "followupNeeded": {
                    "type": "boolean"
                  },
                  "nextFollowupDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "followupSummary": {
                    "type": "string"
                  },
                  "linkedLogs": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedThreads": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "phone": {
                    "type": "string"
                  },
                  "sourceDetail": {
                    "type": "string",
                    "enum": [
                      "Lunchclub",
                      "YC Co-Founder Matching",
                      "GrowthMentor",
                      "MentorCruise",
                      "Website Inquiry",
                      "LinkedIn",
                      "Selby Trust"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created contact"
          }
        }
      }
    },
    "/api/contacts-search": {
      "get": {
        "operationId": "searchContacts",
        "summary": "Search contacts",
        "description": "Fuzzy search contacts using the `q` parameter. Boolean filters (e.g. `followupNeeded=true`) and date filters are also supported.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results"
          }
        }
      }
    },
    "/api/contacts-id": {
      "get": {
        "operationId": "getContactById",
        "summary": "Get contact by ID",
        "description": "Fetch a specific partner contact by Airtable record ID.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The contact record"
          }
        }
      },
      "patch": {
        "operationId": "updateContact",
        "summary": "Update an existing contact",
        "description": "Update an existing contact. Do not include read-only fields.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "linkedin": {
                    "type": "string"
                  },
                  "overview": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string",
                    "enum": [
                      "Referral",
                      "Outreach",
                      "Event",
                      "Colleague",
                      "Inbound",
                      "Lunchclub"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Referral\""
                  },
                  "sourceDetail": {
                    "type": "string",
                    "enum": [
                      "Lunchclub",
                      "YC Co-Founder Matching",
                      "GrowthMentor",
                      "MentorCruise",
                      "Website Inquiry",
                      "LinkedIn",
                      "Selby Trust"
                    ]
                  },
                  "relationshipType": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Partner",
                        "Customer",
                        "Mentee",
                        "Subscriber",
                        "Lead",
                        "Network",
                        "Frenemy"
                      ]
                    }
                  },
                  "relationshipStrength": {
                    "type": "string",
                    "enum": [
                      "Cold",
                      "Weak",
                      "Warm",
                      "Strong"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Strong\""
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "Maintenance",
                      "Active Conversation",
                      "Needs Follow Up",
                      "No Response",
                      "No Fit",
                      "Dormant"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"No Fit\""
                  },
                  "patternMatchCollaboration": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Collaborated – Referrer",
                        "Potential – Referrer",
                        "Potential – Client",
                        "Collaborated – Client",
                        "Potential – Sponsor",
                        "Collaborated – Sponsor",
                        "Potential – Drop Partner",
                        "Collaborated – Drop Partner",
                        "Potential – Event Partner",
                        "Collaborated – Event Partner",
                        "Potential – Content Partner",
                        "Collaborated – Content Partner",
                        "Potential – Podcast Guest",
                        "Collaborated – Podcast Guest",
                        "Collaborated – Mentoring",
                        "Potential – Mentoring",
                        "Potential – Co-Founder"
                      ]
                    }
                  },
                  "patternMatchArchetype": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Solo",
                        "Builder",
                        "Artist",
                        "Driver",
                        "Connector",
                        "Influencer",
                        "Agency",
                        "Educator",
                        "Investor"
                      ]
                    }
                  },
                  "linkedLogs": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "followupNeeded": {
                    "type": "boolean"
                  },
                  "nextFollowupDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "followupSummary": {
                    "type": "string"
                  },
                  "linkedThreads": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated contact"
          }
        }
      }
    },
    "/api/threads-index": {
      "get": {
        "operationId": "getAllThreads",
        "summary": "List all threads",
        "responses": {
          "200": {
            "description": "A list of threads",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "Experiment",
                            "Internal",
                            "Output",
                            "Collaboration"
                          ]
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "Idea",
                          "In Progress",
                          "Paused",
                          "Complete"
                        ],
                        "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Idea\""
                      },
                      "description": {
                        "type": "string"
                      },
                      "associatedContacts": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "contactId": {
                        "type": "string"
                      },
                      "associatedLogs": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "logId": {
                        "type": "string"
                      },
                      "linkToOutputs": {
                        "type": "string"
                      },
                      "createdDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastModified": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "threadId": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createThread",
        "summary": "Create a new thread",
        "description": "Create a Thread or Subthread (linked to a parent). Threads are HQs for projects or ideas. Subthreads track related workstreams. Do not include read-only fields (like 'createdDate', 'lastModified', etc.). Linked record names may be used for contacts or logs and will be resolved to record IDs.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Experiment",
                        "Internal: Project",
                        "Internal: Ritual",
                        "Output",
                        "Collaboration",
                        "Mentorship",
                        "Consulting",
                        "Partner Program"
                      ]
                    }
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "Idea",
                      "In Progress",
                      "Paused",
                      "Complete"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Idea\""
                  },
                  "description": {
                    "type": "string"
                  },
                  "parentThread": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "subthread": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedContacts": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedLogs": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/threads-id": {
      "get": {
        "operationId": "getThreadById",
        "summary": "Get thread by ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The thread record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Experiment",
                          "Internal",
                          "Output",
                          "Collaboration"
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "Idea",
                        "In Progress",
                        "Paused",
                        "Complete"
                      ],
                      "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Idea\""
                    },
                    "description": {
                      "type": "string"
                    },
                    "associatedContacts": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contactId": {
                      "type": "string"
                    },
                    "associatedLogs": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "logId": {
                      "type": "string"
                    },
                    "linkToOutputs": {
                      "type": "string"
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "threadId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateThread",
        "summary": "Update an existing thread",
        "description": "Update an existing thread. Do not include read-only fields.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Experiment",
                        "Internal: Project",
                        "Internal: Ritual",
                        "Output",
                        "Collaboration",
                        "Mentorship",
                        "Consulting",
                        "Partner Program"
                      ]
                    }
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "Idea",
                      "In Progress",
                      "Paused",
                      "Complete"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Idea\""
                  },
                  "description": {
                    "type": "string"
                  },
                  "linkedContacts": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedLogs": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "parentThread": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "subthread": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated thread"
          }
        }
      }
    },
    "/api/threads-search": {
      "get": {
        "operationId": "searchThreads",
        "summary": "Search threads",
        "description": "Fuzzy search threads using the `q` parameter. Additional filters and sorting options are supported.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "Experiment",
                            "Internal",
                            "Output",
                            "Collaboration"
                          ]
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "Idea",
                          "In Progress",
                          "Paused",
                          "Complete"
                        ],
                        "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Idea\""
                      },
                      "description": {
                        "type": "string"
                      },
                      "associatedContacts": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "contactId": {
                        "type": "string"
                      },
                      "associatedLogs": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "logId": {
                        "type": "string"
                      },
                      "linkToOutputs": {
                        "type": "string"
                      },
                      "createdDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastModified": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "threadId": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/threads-link": {
      "post": {
        "operationId": "linkThreads",
        "summary": "Add a parent thread or subthread",
        "description": "Link two existing threads by setting a parent or subthread relationship. Thread names or record IDs are accepted and resolved automatically.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "childThread": {
                    "type": "string",
                    "description": "Child thread name or record ID"
                  },
                  "parentThread": {
                    "type": "string",
                    "description": "Parent thread name or record ID"
                  },
                  "linkType": {
                    "type": "string",
                    "enum": [
                      "parent",
                      "subthread"
                    ],
                    "description": "Choose 'parent' to set a parent on the child thread or 'subthread' to add a subthread to the parent thread"
                  }
                },
                "required": [
                  "childThread",
                  "parentThread",
                  "linkType"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Link updated"
          }
        }
      }
    },
    "/api/log-entries-index": {
      "get": {
        "operationId": "getAllLogs",
        "summary": "List log entries",
        "description": "Fetch all log entries from the Logs database.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of log entries"
          }
        }
      },
      "post": {
        "operationId": "createLogEntry",
        "summary": "Create a log entry",
        "description": "Create a log entry linked to one or more contacts or threads. Do not include any read-only fields (like 'logId', 'createdAt', or 'lastModified'); these are set automatically. Linked contact or thread names will be resolved to their record IDs.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Logs",
                "type": "object",
                "properties": {
                  "summary": {
                    "type": "string"
                  },
                  "logType": {
                    "type": "string",
                    "enum": [
                      "Call",
                      "Meeting",
                      "Note",
                      "Email",
                      "Ritual Run"
                    ]
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "content": {
                    "type": "string"
                  },
                  "followupNeeded": {
                    "type": "boolean"
                  },
                  "followupNotes": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "string"
                  },
                  "author": {
                    "type": "string"
                  },
                  "linkedContacts": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedThreads": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created log entry"
          }
        }
      }
    },
    "/api/log-entries-search": {
      "get": {
        "operationId": "searchLogEntries",
        "summary": "Search log entries",
        "description": "Fuzzy search log entries with the `q` parameter. Boolean filters and sorting options are also supported.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results"
          }
        }
      }
    },
    "/api/log-entries-id": {
      "get": {
        "operationId": "getLogEntryById",
        "summary": "Get log entry by ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The log entry"
          }
        }
      },
      "patch": {
        "operationId": "updateLogEntry",
        "summary": "Update an existing log entry",
        "description": "Update an existing log entry. Do not include read-only fields.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "string"
                  },
                  "linkedContacts": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "logType": {
                    "type": "string",
                    "enum": [
                      "Call",
                      "Meeting",
                      "Note",
                      "Email",
                      "Ritual Run"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Evemt\""
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "content": {
                    "type": "string"
                  },
                  "followupNeeded": {
                    "type": "boolean"
                  },
                  "followupNotes": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "string"
                  },
                  "author": {
                    "type": "string"
                  },
                  "linkedThreads": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated log entry"
          }
        }
      }
    },
    "/api/snapshots-synthesize-current-state": {
      "get": {
        "operationId": "synthesizeCurrentState",
        "summary": "Synthesize latest snapshot",
        "description": "Return the most recent snapshot with fields filtered by the field map.",
        "responses": {
          "200": {
            "description": "Latest snapshot"
          }
        }
      }
    },
    "/api/synthesize-thread": {
      "post": {
        "operationId": "synthesizeThread",
        "summary": "Generate a thread synthesis",
        "description": "Fetch logs and contacts for a thread, run GPT synthesis, store the result as a log entry, and return the text.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "threadId": {
                    "type": "string",
                    "description": "Thread record ID"
                  }
                },
                "required": [
                  "threadId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Synthesis generated"
          }
        }
      }
    }
  }
}