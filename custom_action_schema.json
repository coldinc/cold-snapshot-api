{
  "$schema": "https://raw.githubusercontent.com/openai/openai-openapi/master/openapi.json",
  "openapi": "3.1.0",
  "info": {
    "title": "Cold Snapshot API",
    "version": "2.0.0",
    "description": "Endpoints for managing snapshots, partner contacts, and log entries within Cold OS."
  },
  "servers": [
    {
      "url": "https://cold-snapshot-api.vercel.app"
    }
  ],
  "paths": {
    "/api/snapshots/latest:": {
      "get": {
        "operationId": "getLatestSnapshot",
        "summary": "Get the latest Cold OS snapshot",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "snapshot": {
                      "type": "object",
                      "properties": {
                        "Date": {
                          "type": "string"
                        },
                        "Snapshot Markdown": {
                          "type": "string"
                        },
                        "Key Updates": {
                          "type": "string"
                        },
                        "Phase ID": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "Snapshot Markdown"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/snapshots/latest": {
      "post": {
        "operationId": "createSnapshot",
        "summary": "Create a new snapshot",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Cold Snapshots",
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "phaseId": {
                    "type": "string"
                  },
                  "snapshotMarkdown": {
                    "type": "string"
                  },
                  "keyUpdates": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Snapshot saved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/contacts": {
      "get": {
        "operationId": "getAllContacts",
        "summary": "List all contacts",
        "description": "Fetch all partner contacts from Airtable.",
        "responses": {
          "200": {
            "description": "A list of contacts"
          }
        }
      },
      "post": {
        "operationId": "createContact",
        "summary": "Create a contact",
        "description": "Create a new partner contact in Airtable.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Contacts",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "linkedin": {
                    "type": "string"
                  },
                  "overview": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string",
                    "enum": [
                      "Referral",
                      "Outreach",
                      "Event",
                      "Colleague",
                      "Inbound",
                      "Lunchclub"
                    ]
                  },
                  "relationshipType": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Partner",
                        "Customer",
                        "Mentee",
                        "Subscriber",
                        "Lead",
                        "Network",
                        "Frenemy"
                      ]
                    }
                  },
                  "relationshipStrength": {
                    "type": "string",
                    "enum": [
                      "Cold",
                      "Weak",
                      "Warm",
                      "Strong"
                    ]
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "Maintenance",
                      "Active Conversation",
                      "Needs Follow Up",
                      "No Response",
                      "No Fit",
                      "Dormant"
                    ]
                  },
                  "patternMatchCollaboration": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Collaborated – Referrer",
                        "Potential – Referrer",
                        "Potential – Client",
                        "Collaborated – Client",
                        "Potential – Sponsor",
                        "Collaborated – Sponsor",
                        "Potential – Drop Partner",
                        "Collaborated – Drop Partner",
                        "Potential – Event Partner",
                        "Collaborated – Event Partner",
                        "Potential – Content Partner",
                        "Collaborated – Content Partner",
                        "Potential – Podcast Guest",
                        "Collaborated – Podcast Guest",
                        "Collaborated – Mentoring",
                        "Potential – Mentoring"
                      ]
                    }
                  },
                  "patternMatchArchetype": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Solo",
                        "Builder",
                        "Artist",
                        "Driver",
                        "Connector",
                        "Influencer",
                        "Agency",
                        "Educator",
                        "Investor"
                      ]
                    }
                  },
                  "importedTable": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "followupNeeded": {
                    "type": "boolean"
                  },
                  "nextFollowupDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "followupSummary": {
                    "type": "string"
                  },
                  "latestRelatedLog": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "lastModified": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "logs": {
                    "type": "string"
                  },
                  "threads": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created contact"
          }
        }
      }
    },
    "/api/contacts/search": {
      "get": {
        "operationId": "searchContactsByName",
        "summary": "Search contacts",
        "description": "Search contacts by partial name match.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results"
          }
        }
      }
    },
    "/api/contacts/{id}": {
      "get": {
        "operationId": "getContactById",
        "summary": "Get contact by ID",
        "description": "Fetch a specific partner contact by Airtable record ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The contact record"
          }
        }
      }
    },
    "/api/log-entries": {
      "get": {
        "operationId": "getAllLogs",
        "summary": "List log entries",
        "description": "Fetch all log entries from the Logs database.",
        "responses": {
          "200": {
            "description": "A list of log entries"
          }
        }
      },
      "post": {
        "operationId": "createLogEntry",
        "summary": "Create a log entry",
        "description": "Create a new log entry linked to one or more contacts.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Logs",
                "type": "object",
                "properties": {
                  "summary": {
                    "type": "string"
                  },
                  "contactsLinked": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "linkedContactId": {
                    "type": "string"
                  },
                  "logType": {
                    "type": "string",
                    "enum": [
                      "Call",
                      "Meeting",
                      "Note",
                      "Email"
                    ]
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "content": {
                    "type": "string"
                  },
                  "followupNeeded": {
                    "type": "boolean"
                  },
                  "followupNotes": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "string"
                  },
                  "relatedOutput": {
                    "type": "string"
                  },
                  "logId": {
                    "type": "string"
                  },
                  "author": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastModified": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "contacts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "threadLinked": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "threadId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created log entry"
          }
        }
      }
    }
  }
}