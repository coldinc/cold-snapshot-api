{
  "$schema": "https://raw.githubusercontent.com/openai/openai-openapi/master/openapi.json",
  "openapi": "3.1.0",
  "info": {
    "title": "Cold Snapshot API",
    "version": "2.0.0",
    "description": "Endpoints for managing snapshots, partner contacts, and log entries within Cold OS."
  },
  "servers": [
    {
      "url": "https://cold-snapshot-api.vercel.app"
    }
  ],
  "paths": {
    "/api/snapshots-latest": {
      "post": {
        "operationId": "createSnapshot",
        "summary": "Create a new snapshot",
        "description": "Create a general snapshot of the current state of the business, including active threads, insights, action items and key decisions made. IMPORTANT: Do not include any fields marked as read-only (such as 'created') in the request payload. These fields are computed automatically.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Cold Snapshots",
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "phaseId": {
                    "type": "string"
                  },
                  "snapshotMarkdown": {
                    "type": "string"
                  },
                  "keyUpdates": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string",
                    "readOnly": true
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Snapshot saved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateSnapshot",
        "summary": "Update an existing snapshot",
        "description": "Update an existing snapshot. Do not include read-only fields.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "phaseId": {
                    "type": "string"
                  },
                  "snapshotMarkdown": {
                    "type": "string"
                  },
                  "keyUpdates": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated snapshot"
          }
        }
      }
    },
    "/api/snapshots-index": {
      "get": {
        "operationId": "getAllSnapshots",
        "summary": "List snapshots",
        "description": "Fetch all snapshot records.",
        "responses": {
          "200": {
            "description": "A list of snapshots"
          }
        }
      },
      "post": {
        "operationId": "createSnapshotRecord",
        "summary": "Create snapshot record",
        "description": "Create a snapshot of the current business state. IMPORTANT: Do not include read-only fields such as 'id' or 'created'.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Cold Snapshots",
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "phaseId": {
                    "type": "string"
                  },
                  "snapshotMarkdown": {
                    "type": "string"
                  },
                  "keyUpdates": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string",
                    "readOnly": true
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created snapshot"
          }
        }
      }
    },
    "/api/snapshots-id": {
      "get": {
        "operationId": "getSnapshotById",
        "summary": "Get snapshot by ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The snapshot record"
          }
        }
      },
      "patch": {
        "operationId": "updateSnapshotRecord",
        "summary": "Update an existing snapshot record",
        "description": "Update an existing snapshot record. Do not include read-only fields.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "phaseId": {
                    "type": "string"
                  },
                  "snapshotMarkdown": {
                    "type": "string"
                  },
                  "keyUpdates": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated snapshot record"
          }
        }
      }
    },
    "/api/snapshots-search": {
      "get": {
        "operationId": "searchSnapshots",
        "summary": "Search snapshots",
        "description": "Fuzzy search snapshots using the `q` parameter. Optional filters like `limit`, `sortBy`, `updatedAfter`, and `recent` are also supported.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results"
          }
        }
      }
    },
    "/api/contacts-index": {
      "get": {
        "operationId": "getAllContacts",
        "summary": "List all contacts",
        "description": "Fetch all partner contacts from Airtable.",
        "responses": {
          "200": {
            "description": "A list of contacts"
          }
        }
      },
      "post": {
        "operationId": "createContact",
        "summary": "Create a contact",
        "description": "Create a new partner contact in Airtable. Do not include any fields marked as read-only (such as 'id', 'lastModified' or 'created') in the request payload, they are computed automatically. Linked log or thread names may be supplied instead of record IDs and will be resolved automatically.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Contacts",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "linkedin": {
                    "type": "string"
                  },
                  "overview": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string",
                    "enum": [
                      "Referral",
                      "Outreach",
                      "Event",
                      "Colleague",
                      "Inbound",
                      "Lunchclub"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Evemt\""
                  },
                  "relationshipType": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Partner",
                        "Customer",
                        "Mentee",
                        "Subscriber",
                        "Lead",
                        "Network",
                        "Frenemy"
                      ]
                    }
                  },
                  "relationshipStrength": {
                    "type": "string",
                    "enum": [
                      "Cold",
                      "Weak",
                      "Warm",
                      "Strong"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Cold\""
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "Maintenance",
                      "Active Conversation",
                      "Needs Follow Up",
                      "No Response",
                      "No Fit",
                      "Dormant"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Dormant\""
                  },
                  "patternMatchCollaboration": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Collaborated – Referrer",
                        "Potential – Referrer",
                        "Potential – Client",
                        "Collaborated – Client",
                        "Potential – Sponsor",
                        "Collaborated – Sponsor",
                        "Potential – Drop Partner",
                        "Collaborated – Drop Partner",
                        "Potential – Event Partner",
                        "Collaborated – Event Partner",
                        "Potential – Content Partner",
                        "Collaborated – Content Partner",
                        "Potential – Podcast Guest",
                        "Collaborated – Podcast Guest",
                        "Collaborated – Mentoring",
                        "Potential – Mentoring"
                      ]
                    }
                  },
                  "patternMatchArchetype": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Solo",
                        "Builder",
                        "Artist",
                        "Driver",
                        "Connector",
                        "Influencer",
                        "Agency",
                        "Educator",
                        "Investor"
                      ]
                    }
                  },
                  "importedTable": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "followupNeeded": {
                    "type": "boolean"
                  },
                  "nextFollowupDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "followupSummary": {
                    "type": "string"
                  },
                  "latestRelatedLog": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string",
                    "readOnly": true
                  },
                  "lastModified": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "logs": {
                    "type": "string"
                  },
                  "threads": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "linkedLogs": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedLogsSummary": {
                    "type": "string"
                  },
                  "linkedLogsId": {
                    "type": "string"
                  },
                  "linkedThreads": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedThreadsName": {
                    "type": "string"
                  },
                  "linkedThreadsId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created contact"
          }
        }
      }
    },
    "/api/contacts-search": {
      "get": {
        "operationId": "searchContacts",
        "summary": "Search contacts",
        "description": "Fuzzy search contacts using the `q` parameter. Boolean filters (e.g. `followupNeeded=true`) and date filters are also supported.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results"
          }
        }
      }
    },
    "/api/contacts-id": {
      "get": {
        "operationId": "getContactById",
        "summary": "Get contact by ID",
        "description": "Fetch a specific partner contact by Airtable record ID.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The contact record"
          }
        }
      },
      "patch": {
        "operationId": "updateContact",
        "summary": "Update an existing contact",
        "description": "Update an existing contact. Do not include read-only fields.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "linkedin": {
                    "type": "string"
                  },
                  "overview": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string",
                    "enum": [
                      "Referral",
                      "Outreach",
                      "Event",
                      "Colleague",
                      "Inbound",
                      "Lunchclub"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Referral\""
                  },
                  "relationshipType": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Partner",
                        "Customer",
                        "Mentee",
                        "Subscriber",
                        "Lead",
                        "Network",
                        "Frenemy"
                      ]
                    }
                  },
                  "relationshipStrength": {
                    "type": "string",
                    "enum": [
                      "Cold",
                      "Weak",
                      "Warm",
                      "Strong"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Strong\""
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "Maintenance",
                      "Active Conversation",
                      "Needs Follow Up",
                      "No Response",
                      "No Fit",
                      "Dormant"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"No Fit\""
                  },
                  "patternMatchCollaboration": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Collaborated – Referrer",
                        "Potential – Referrer",
                        "Potential – Client",
                        "Collaborated – Client",
                        "Potential – Sponsor",
                        "Collaborated – Sponsor",
                        "Potential – Drop Partner",
                        "Collaborated – Drop Partner",
                        "Potential – Event Partner",
                        "Collaborated – Event Partner",
                        "Potential – Content Partner",
                        "Collaborated – Content Partner",
                        "Potential – Podcast Guest",
                        "Collaborated – Podcast Guest",
                        "Collaborated – Mentoring",
                        "Potential – Mentoring"
                      ]
                    }
                  },
                  "patternMatchArchetype": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Solo",
                        "Builder",
                        "Artist",
                        "Driver",
                        "Connector",
                        "Influencer",
                        "Agency",
                        "Educator",
                        "Investor"
                      ]
                    }
                  },
                  "linkedLogs": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedLogsSummary": {
                    "type": "string"
                  },
                  "linkedLogsId": {
                    "type": "string"
                  },
                  "followupNeeded": {
                    "type": "boolean"
                  },
                  "nextFollowupDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "followupSummary": {
                    "type": "string"
                  },
                  "latestRelatedLog": {
                    "type": "string"
                  },
                  "linkedThreads": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedThreadsName": {
                    "type": "string"
                  },
                  "linkedThreadsId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated contact"
          }
        }
      }
    },
    "/api/threads-index": {
      "get": {
        "operationId": "getAllThreads",
        "summary": "List all threads",
        "responses": {
          "200": {
            "description": "A list of threads",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "Experiment",
                            "Internal",
                            "Output",
                            "Collaboration"
                          ]
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "Idea",
                          "In Progress",
                          "Paused",
                          "Complete"
                        ],
                        "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Idea\""
                      },
                      "description": {
                        "type": "string"
                      },
                      "associatedContacts": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "contactId": {
                        "type": "string"
                      },
                      "associatedLogs": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "logId": {
                        "type": "string"
                      },
                      "linkToOutputs": {
                        "type": "string"
                      },
                      "createdDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastModified": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "threadId": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createThread",
        "summary": "Create a new thread",
        "description": "Create a Thread or Subthread (linked to a parent). Threads are HQs for projects or ideas. Subthreads track related workstreams. Do not include read-only fields (like 'createdDate', 'lastModified', etc.). Linked record names may be used for contacts or logs and will be resolved to record IDs.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Experiment",
                        "Internal: Project",
                        "Internal: Ritual",
                        "Output",
                        "Collaboration"
                      ]
                    }
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "Idea",
                      "In Progress",
                      "Paused",
                      "Complete"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Idea\""
                  },
                  "description": {
                    "type": "string"
                  },
                  "associatedContacts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "contactId": {
                    "type": "string"
                  },
                  "associatedLogs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "logId": {
                    "type": "string"
                  },
                  "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "lastModified": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "threadId": {
                    "type": "string",
                    "readOnly": true
                  },
                  "parentThread": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "parentThreadId": {
                    "type": "string"
                  },
                  "subthread": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "subthreadId": {
                    "type": "string"
                  },
                  "linkedContacts": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedContactsNames": {
                    "type": "string",
                    "readOnly": true
                  },
                  "linkedContactsId": {
                    "type": "string"
                  },
                  "linkedLogs": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedLogsSummary": {
                    "type": "string"
                  },
                  "linkedLogsId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/threads-id": {
      "get": {
        "operationId": "getThreadById",
        "summary": "Get thread by ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The thread record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Experiment",
                          "Internal",
                          "Output",
                          "Collaboration"
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "Idea",
                        "In Progress",
                        "Paused",
                        "Complete"
                      ],
                      "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Idea\""
                    },
                    "description": {
                      "type": "string"
                    },
                    "associatedContacts": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contactId": {
                      "type": "string"
                    },
                    "associatedLogs": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "logId": {
                      "type": "string"
                    },
                    "linkToOutputs": {
                      "type": "string"
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "threadId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateThread",
        "summary": "Update an existing thread",
        "description": "Update an existing thread. Do not include read-only fields.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Experiment",
                        "Internal: Project",
                        "Internal: Ritual",
                        "Output",
                        "Collaboration"
                      ]
                    }
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "Idea",
                      "In Progress",
                      "Paused",
                      "Complete"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Idea\""
                  },
                  "description": {
                    "type": "string"
                  },
                  "linkedContacts": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedContactsId": {
                    "type": "string"
                  },
                  "linkedLogs": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedLogsSummary": {
                    "type": "string"
                  },
                  "linkedLogsId": {
                    "type": "string"
                  },
                  "parentThread": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "parentThreadId": {
                    "type": "string"
                  },
                  "subthread": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "subthreadId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated thread"
          }
        }
      }
    },
    "/api/threads-search": {
      "get": {
        "operationId": "searchThreads",
        "summary": "Search threads",
        "description": "Fuzzy search threads using the `q` parameter. Additional filters and sorting options are supported.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "Experiment",
                            "Internal",
                            "Output",
                            "Collaboration"
                          ]
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "Idea",
                          "In Progress",
                          "Paused",
                          "Complete"
                        ],
                        "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Idea\""
                      },
                      "description": {
                        "type": "string"
                      },
                      "associatedContacts": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "contactId": {
                        "type": "string"
                      },
                      "associatedLogs": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "logId": {
                        "type": "string"
                      },
                      "linkToOutputs": {
                        "type": "string"
                      },
                      "createdDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastModified": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "threadId": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/threads-link": {
      "post": {
        "operationId": "linkThreads",
        "summary": "Add a parent thread or subthread",
        "description": "Link two existing threads by setting a parent or subthread relationship. Thread names or record IDs are accepted and resolved automatically.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "childThread": {
                    "type": "string",
                    "description": "Child thread name or record ID"
                  },
                  "parentThread": {
                    "type": "string",
                    "description": "Parent thread name or record ID"
                  },
                  "linkType": {
                    "type": "string",
                    "enum": ["parent", "subthread"],
                    "description": "Choose 'parent' to set a parent on the child thread or 'subthread' to add a subthread to the parent thread"
                  }
                },
                "required": ["childThread", "parentThread", "linkType"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Link updated"
          }
        }
      }
    },
    "/api/log-entries-index": {
      "get": {
        "operationId": "getAllLogs",
        "summary": "List log entries",
        "description": "Fetch all log entries from the Logs database.",
        "responses": {
          "200": {
            "description": "A list of log entries"
          }
        }
      },
      "post": {
        "operationId": "createLogEntry",
        "summary": "Create a log entry",
        "description": "Create a log entry linked to one or more contacts or threads. Do not include any read-only fields (like 'logId', 'createdAt', or 'lastModified'); these are set automatically. Linked contact or thread names will be resolved to their record IDs.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Logs",
                "type": "object",
                "properties": {
                  "summary": {
                    "type": "string"
                  },
                  "contactsLinked": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "linkedContactId": {
                    "type": "string"
                  },
                  "logType": {
                    "type": "string",
                    "enum": [
                      "Call",
                      "Meeting",
                      "Note",
                      "Email",
                      "Ritual Run"
                    ]
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "content": {
                    "type": "string"
                  },
                  "followupNeeded": {
                    "type": "boolean"
                  },
                  "followupNotes": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "string"
                  },
                  "relatedOutput": {
                    "type": "string"
                  },
                  "logId": {
                    "type": "string",
                    "readOnly": true
                  },
                  "author": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "lastModified": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "contacts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "threadLinked": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "threadId": {
                    "type": "string"
                  },
                  "linkedContacts": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedContactsNames": {
                    "type": "string"
                  },
                  "linkedContactsId": {
                    "type": "string"
                  },
                  "linkedThreads": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedThreadsName": {
                    "type": "string"
                  },
                  "linkedThreadsId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created log entry"
          }
        }
      }
    },
    "/api/log-entries-search": {
      "get": {
        "operationId": "searchLogEntries",
        "summary": "Search log entries",
        "description": "Fuzzy search log entries with the `q` parameter. Boolean filters and sorting options are also supported.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results"
          }
        }
      }
    },
    "/api/log-entries-id": {
      "get": {
        "operationId": "getLogEntryById",
        "summary": "Get log entry by ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The log entry"
          }
        }
      },
      "patch": {
        "operationId": "updateLogEntry",
        "summary": "Update an existing log entry",
        "description": "Update an existing log entry. Do not include read-only fields.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "string"
                  },
                  "linkedContacts": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedContactsNames": {
                    "type": "string"
                  },
                  "linkedContactsId": {
                    "type": "string"
                  },
                  "logType": {
                    "type": "string",
                    "enum": [
                      "Call",
                      "Meeting",
                      "Note",
                      "Email",
                      "Ritual Run"
                    ],
                    "description": "This field must be provided as a single string value (not an array). Choose one value from the list of allowed options. Example: \"Evemt\""
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "content": {
                    "type": "string"
                  },
                  "followupNeeded": {
                    "type": "boolean"
                  },
                  "followupNotes": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "string"
                  },
                  "author": {
                    "type": "string"
                  },
                  "linkedThreads": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "record-id"
                    }
                  },
                  "linkedThreadsName": {
                    "type": "string"
                  },
                  "linkedThreadsId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated log entry"
          }
        }
      }
    }
  }
}